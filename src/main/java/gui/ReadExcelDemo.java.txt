package com.pca.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.Iterator;

import com.pca.gui.ApplicationPM;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;

public class  ReadExcelDemo {
    public void ext2ext(){
        Connection connection = ApplicationPM.DB.getConnect();
        Connection connectionLoc = ApplicationPM.DB.getConnectLOC();
        try {
            Statement statement = connection.createStatement();
            Statement statementLoc = connectionLoc.createStatement();
            String sql ="select * from extensionMKTmagic;";
            ResultSet rs = statementLoc.executeQuery(sql);
            while (rs.next()){
                int id = rs.getInt("id");
                String name = rs.getString("name");
                LocalDate releaseDate = rs.getDate("releaseDate").toLocalDate();
                int totalSetSize = rs.getInt("totalSetSize");
                sql = "INSERT INTO extensionMagicMKT ( id, name,dateSortie,totalSetSize )" +
                        "   VALUES("+id+", \""+name+"\",'"+releaseDate+"',"+totalSetSize+" )";
                statement.executeUpdate(sql);
            }
            statement.close();
            statementLoc.close();
        }catch (Exception e){
            System.out.println("ERREUR"+e);
        }

    }

    public static void main(String[] args) throws IOException {
        Connection connection = ApplicationPM.DB.getConnect();
        //Connection connectionLoc = com.pca.gui.ApplicationPM.getConnectLOC();
        try {
            Statement statement = connection.createStatement();
            //Statement statementLoc = connectionLoc.createStatement();
            // Read XSL file
            FileInputStream inputStream = new FileInputStream(new File("Extension2Extension.xls"));

            // Get the workbook instance for XLS file
            HSSFWorkbook workbook = new HSSFWorkbook(inputStream);

            // Get first sheet from the workbook
            HSSFSheet sheet = workbook.getSheetAt(2);

            // Get iterator to all the rows in current sheet
            Iterator<Row> rowIterator = sheet.iterator();
            rowIterator.next();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                if (row.getPhysicalNumberOfCells() < 5) continue;

                String sql = "INSERT INTO extensionmagicmkt_extensionmagic ( extensionmagicmkt_id, extensionmagic_id )" +
                        "   VALUES("+row.getCell(0)+", "+row.getCell(3)+" )";
                statement.executeUpdate(sql);
                System.out.println(row.getCell(0) + " <====> " + row.getCell(3));

                if (true) continue;

                System.out.println(row.getPhysicalNumberOfCells() + "---------------------------------------------------------------------------");

                Iterator<Cell> cellIterator = row.cellIterator();

                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();

                    // Change to getCellType() if using POI 4.x
                    CellType cellType = cell.getCellTypeEnum();

                    switch (cellType) {
                        case _NONE:
                            System.out.print("");
                            System.out.print("\t");
                            break;
                        case BOOLEAN:
                            System.out.print(cell.getBooleanCellValue());
                            System.out.print("\t");
                            break;
                        case BLANK:
                            System.out.print("");
                            System.out.print("\t");
                            break;
                        case FORMULA:
                            // Formula
                            System.out.print(cell.getCellFormula());
                            System.out.print("\t");

                            FormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();
                            // Print out value evaluated by formula
                            System.out.print(evaluator.evaluate(cell).getNumberValue());
                            break;
                        case NUMERIC:
                            System.out.print(cell.getNumericCellValue());
                            System.out.print("\t");
                            break;
                        case STRING:
                            System.out.print(cell.getStringCellValue());
                            System.out.print("\t");
                            break;
                        case ERROR:
                            System.out.print("!");
                            System.out.print("\t");
                            break;
                    }

                }
                System.out.println("");
            }
        } catch (Exception ex) {
            System.out.print("E R R E U R : "+ex);
        }
    }
}